// <auto-generated />
using System;
using CustomerApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerApi.Migrations
{
    [DbContext(typeof(CustomerContext))]
    partial class CustomerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CustomerApi.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PublicPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TypeAddress")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("CustomerApi.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CustomerApi.Models.Customer", b =>
                {
                    b.HasOne("CustomerApi.Models.Address", "Address")
                        .WithOne("Customer")
                        .HasForeignKey("CustomerApi.Models.Customer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BuildBlockCore.DomainObjects.CPF", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("Cpf");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("BuildBlockCore.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Mail")
                                .IsRequired()
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Cpf");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("CustomerApi.Models.Address", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
